#!/usr/bin/env bash

source "${BASH_SOURCE%/*}/shared.sh"

require_installer package-manager
require_installer zsh

source_nvm() {
  export NVM_DIR="$HOME/.nvm"

  [ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"
}

install_nvm() {
  local nvm_url="https://raw.githubusercontent.com/creationix/nvm/v0.34.0/install.sh"

  if [ ! -d ~/.nvm ]; then
    log_install_package "nvm"

    export NVM_DIR="$HOME/.nvm" && (
      git_clone https://github.com/nvm-sh/nvm.git "$NVM_DIR"
      cd "$NVM_DIR"
      git checkout `git describe --abbrev=0 --tags --match "v[0-9]*" $(git rev-list --tags --max-count=1)` > /dev/null 2>&1
    ) && \. "$NVM_DIR/nvm.sh"

    source_nvm
  else
    log_found_package "nvm"
  fi
}

install_node() {
  if is_linux; then
    sudo chown -R $USER:$(id -gn $USER) $HOME/.config
  fi

  if ! command_exists node; then
    log_install_package "node"
    nvm install --lts > /dev/null 2>&1
  else
    log_found_package "node"
  fi
}

yarn_global_add() {
  local package=$1

  if [[ ! $(yarn global list | grep -o $package) ]]; then
    log_install_package $package
    yarn global add $package # > /dev/null 2>&1
  else
    log_found_package $package
  fi
}

npm_globals=(
  tern
  http-server
  create-react-app
  lerna
  typescript
  tslint
  eslint
)

install_nvm
install_node

# install yarn: https://yarnpkg.com/en/
brew_install yarn

if is_linux; then
  if ! command_exists yarn; then
    log_install_package "yarn"

    rm -rf ~/.yarn
    curl -o- -L https://yarnpkg.com/install.sh | bash > /dev/null 2>&1

    export PATH="$HOME/.yarn/bin:$PATH"
    export PATH="$HOME/.yarn/bin:$HOME/.config/yarn/global/node_modules/.bin:$PATH"

    yarn config set prefix ~/.yarn -g > /dev/null 2>&1
  else
    log_found_package "yarn"
  fi
fi

for package in "${npm_globals[@]}"; do
  yarn_global_add $package
done
